<!DOCTYPE html>
<html lang="de" data-theme="light">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="description" content="Interaktiver Vokabeltrainer â€“ mobile & desktop Ansicht" />
  <title>Vokabeln</title>

  <!-- Icons & Favicon -->
  <link rel="icon" href="https://beeferino.github.io/assets/icon.png" type="image/png" />

  <!-- Stylesheet -->
  <link rel="stylesheet" href="vokabeln.css" />

  <!-- Font -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
</head>
<body>

  <!-- Hauptcontainer -->
  <main id="app" class="app-container">
    <!-- Wird dynamisch durch JS gefÃ¼llt -->
  </main>

  <!-- ==============================
       MODAL (Bearbeiten / Neu)
       ============================== -->
  <div id="modalOverlay" class="modal-overlay" style="display:none;">
    <div class="modal">
      <h3 id="modalTitle">Vokabel bearbeiten</h3>
      <label>Englisch:</label>
      <input id="editEng" type="text" placeholder="Englisches Wort" />
      <label>Deutsch:</label>
      <input id="editDeu" type="text" placeholder="Deutsche Ãœbersetzung" />
      <label>Kategorie:</label>
      <select id="editCat"></select>
      <label>Anmerkung:</label>
      <textarea id="editNote" placeholder="Optional"></textarea>
      <div class="modal-buttons">
        <button id="saveBtn" class="btn">ðŸ’¾ Speichern</button>
        <button id="cancelBtn" class="btn warn">âœ– Abbrechen</button>
      </div>
    </div>
  </div>

  <!-- ==============================
       SCRIPTS
       ============================== -->
  <script>
    // Theme initialisieren & umschalten
    function initTheme() {
      const theme = localStorage.getItem("theme") || "light";
      document.documentElement.setAttribute("data-theme", theme);
    }
    function toggleTheme() {
      const html = document.documentElement;
      const current = html.getAttribute("data-theme");
      const next = current === "dark" ? "light" : "dark";
      html.setAttribute("data-theme", next);
      localStorage.setItem("theme", next);
    }
  </script>

  <script src="vokabeln.js"></script>

  <!-- ==============================
       MODAL-LOGIK (Bearbeiten / Neu)
       ============================== -->
  <script>
    const modal = document.getElementById("modalOverlay");
    const editEng = document.getElementById("editEng");
    const editDeu = document.getElementById("editDeu");
    const editCat = document.getElementById("editCat");
    const editNote = document.getElementById("editNote");
    const modalTitle = document.getElementById("modalTitle");

    const CATEGORY_NAMES = {
      Gelb: "Grundwerkzeuge Metallverarbeitung",
      Pink: "Werkzeugkasten Mechaniker",
      Blau: "Blech- / Kunststoffarbeiten",
      Gruen: "Drehen / FrÃ¤sen",
      HellesPink: "Hydraulik / Pneumatik",
      Orange: "Elektrotechnik",
      Dunkelgruen: "FluggerÃ¤temechanik allgemein",
    };

    // Kategorien fÃ¼llen
    Object.entries(CATEGORY_NAMES).forEach(([key, label]) => {
      const opt = document.createElement("option");
      opt.value = key;
      opt.textContent = label;
      editCat.appendChild(opt);
    });

    let editIndex = null;

    function openEdit(index) {
      modal.style.display = "flex";
      if (index === null) {
        modalTitle.textContent = "Neue Vokabel";
        editIndex = null;
        editEng.value = "";
        editDeu.value = "";
        editNote.value = "";
        editCat.value = "Gelb";
      } else {
        modalTitle.textContent = "Vokabel bearbeiten";
        const item = list[index];
        editIndex = index;
        editEng.value = item[0];
        editDeu.value = item[1];
        editNote.value = item[3];
        editCat.value = item[2];
      }
    }

    function closeModal() {
      modal.style.display = "none";
    }

    document.getElementById("cancelBtn").onclick = closeModal;

    document.getElementById("saveBtn").onclick = () => {
      const eng = editEng.value.trim();
      const deu = editDeu.value.trim();
      const cat = editCat.value;
      const note = editNote.value.trim();

      if (!eng || !deu) {
        alert("Bitte Englisch und Deutsch ausfÃ¼llen!");
        return;
      }

      const newItem = [eng, deu, cat, note, "", new Date().toISOString(), 0, crypto.randomUUID()];
      if (editIndex === null) {
        list.push(newItem);
      } else {
        list[editIndex] = newItem;
      }

      localStorage.setItem("vokabeln", JSON.stringify(list));
      closeModal();
      // Neu rendern je nach View
      if (document.body.classList.contains("mobile-mode")) {
        renderMobileList();
      } else {
        renderTable();
      }
    };
  </script>

  <!-- ==============================
       STYLES fÃ¼r Modal
       ============================== -->
  <style>
    .modal-overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0,0,0,0.6);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 2000;
    }
    .modal {
      background: var(--bg-light);
      color: var(--text-light);
      border-radius: 10px;
      padding: 20px;
      width: 90%;
      max-width: 400px;
      box-shadow: 0 4px 16px rgba(0,0,0,0.4);
    }
    [data-theme="dark"] .modal {
      background: #1e293b;
      color: var(--text-dark);
    }
    .modal input, .modal textarea, .modal select {
      width: 100%;
      margin-bottom: 10px;
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 6px;
      font-size: 1em;
    }
    .modal-buttons {
      display: flex;
      justify-content: space-between;
      margin-top: 10px;
    }
  </style>

</body>
</html>
